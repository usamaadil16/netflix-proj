{"version":3,"sources":["Components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","_ref","title","poster_path","overview","vote_average","react_default","a","createElement","className","src","alt","App","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","searchTerm","setSearchTerm","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","data","json","wrap","_context","prev","next","fetch","sent","results","stop","apply","this","arguments","fetchdata","Fragment","onSubmit","e","preventDefault","then","res","console","log","type","placeholder","value","onChange","target","length","map","movie","Components_Movie","assign","key","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"+KAmBeA,EAhBD,SAAAC,GAAkD,IAAhDC,EAAgDD,EAAhDC,MAAOC,EAAyCF,EAAzCE,YAAaC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,aAC1C,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKE,IAJH,mCAIkBP,EAAaQ,IAAKT,IACtCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAAA,YAAOH,IAEXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAIJ,uxMC0CLQ,MApDf,WAAe,IAAAC,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACEI,EADFJ,EAAA,GAAAK,EAEuBN,mBAAS,IAFhCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEME,EAFNF,EAAA,GAqCb,OA/BAG,oBAAU,YACO,eAAAvB,EAAAe,OAAAS,EAAA,EAAAT,CAAAU,IAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,MAAM,uHADT,cACVN,EADUG,EAAAI,KAAAJ,EAAAE,KAAA,EAEGL,EAAKC,OAFR,OAEVA,EAFUE,EAAAI,KAGhBjB,EAAUW,EAAKO,SAHC,wBAAAL,EAAAM,SAAAV,MAAH,yBAAA3B,EAAAsC,MAAAC,KAAAC,YAAA,EAKfC,IAOC,IAkBKpC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACNrC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,WACAH,EAAAC,EAAAC,cAAA,QAAMoC,SAlBW,SAACC,GACpBA,EAAEC,iBAEFX,MAAM,6FAA+Fb,GACpGyB,KAAK,SAACC,GAAD,OAAOA,EAAIlB,SAChBiB,KAAK,SAAClB,GACLoB,QAAQC,IAAIrB,GACZV,EAAUU,EAAKQ,aAYf/B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAS0C,KAAK,OAAOC,YAAY,SAASC,MAAO/B,EAAYgC,SAR5D,SAACT,GACrBtB,EAAcsB,EAAEU,OAAOF,YAWvB/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZS,EAAOsC,OAAO,GAAKtC,EAAOuC,IAAI,SAACC,GAAD,OAAUpD,EAAAC,EAAAC,cAACmD,EAAD3C,OAAA4C,OAAA,CAAOC,IAAMH,EAAMI,IAAQJ,SCrC3DK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAArB,EAAA,GAAAE,KAAAmB,EAAAC,KAAA,UAAqBpB,KAAK,SAAA9C,GAAiD,IAA9CmE,EAA8CnE,EAA9CmE,OAAQC,EAAsCpE,EAAtCoE,OAAQC,EAA8BrE,EAA9BqE,OAAQC,EAAsBtE,EAAtBsE,OAAQC,EAAcvE,EAAduE,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvE,EAAAC,EAAAC,cAACF,EAAAC,EAAMuE,WAAP,KACExE,EAAAC,EAAAC,cAACuE,EAAD,QAOJhB","file":"static/js/main.16a273cc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst IMG_API=\"https://image.tmdb.org/t/p/w1280\";\r\nconst Movie = ({title, poster_path, overview, vote_average}) => {\r\n    return ( \r\n        <div className=\"movie\">\r\n            <img src={IMG_API + poster_path} alt={title}/>\r\n            <div className=\"movie-info\">\r\n                <h3>{title}</h3>\r\n                <span>{vote_average}</span>\r\n            </div>\r\n            <div className=\"movie-overview\">\r\n                <h2>Overview:</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Movie ;","import React from 'react';\nimport Movie from './Components/Movie';\nimport { useEffect, useState } from 'react';\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  //5.12.0\n  \n  useEffect(()=>{\n    const fetchdata = async () => {\n      const data = await fetch(\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\");\n      const json = await data.json();\n      setMovies(json.results);\n    }\n    fetchdata();\n    /*fetch(\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\")\n    .then((res)=>res.json())\n    .then((data)=>{\n      console.log(data);\n      setMovies(data.results);\n    })*/\n  }, []);\n\n\n  const handleOnSubmit=(e)=>{\n    e.preventDefault();\n\n    fetch(\"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\" + searchTerm)\n    .then((res)=>res.json())\n    .then((data)=>{\n      console.log(data);\n      setMovies(data.results);\n    })\n  };\n\n  const handleOnChange =(e)=>{\n    setSearchTerm(e.target.value);\n  }\n\n  return (<>\n    <header>\n      <h1 className='page-title'>Netflix</h1>\n      <form onSubmit={handleOnSubmit}>\n      <input className=\"search\" type='text' placeholder=\"search\" value={searchTerm} onChange={handleOnChange}/>\n      </form>\n\n    </header>\n    <div className=\"movie-container\">\n      {movies.length>0 && movies.map((movie)=> <Movie key ={movie.id} {...movie}/>)}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}